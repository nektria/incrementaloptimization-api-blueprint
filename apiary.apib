FORMAT: 1A

# Nektria Incremental optimization


The Incremental Optimization Service of RECS API is designed to elaborate and plan optimized deliveries.

The API is organized in 3 sections:
- Base Types are defined in the first part, and are made available with requests to validate their elements.
- Optimization requests aim to provide optimal routes for executing the deliveries.
- Callbacks are the endpoints that need to be made available in the client.

## Security

### Secure communication

All api requests must use https.

### Authentication Schemes

+ Basic (apikey)

    You must provide an API key, which is a unique identifier for your account, as well as an application identifier that helps to
    track which of your applications is making calls to the API.
    + Headers
        + Authorization: Basic YourApiKey


##Group Base Types
## Address [/check/address]
An address contains information about a physical address for pick-up and delivery pruposes

+ Attributes (object)
    + postal_code: 08022 (required, string)
    + street_type: Pza. (optional, string)
    + street_name: Urquinaona (optional, string)
    + street_number: 5 (optional, string)
    + floor: "4º" (optional, string), 
    + door: "1ª" (optional, string), 
    + stair_building: "Escalera A" (optional, string),
    + city: Barcelona (optional, string)
    + country_code: ES (required, string)
    + elevator: 1 (optional, number) 
    + coordinates (optional)
        + latitude: 41.123456 (required, number)
        + longitude: 2.123456 (required, number)

### Check if an Address is valid [POST /check/address]
+ Attributes (Address)
        
+ Response 204
    
+ Response 400 (application/json)
    Invalid Address
    + Body
    
            {
                "status": "error",
                "error": "The address is invalid"
            }
    

## Product [/check/product]

+ Attributes (object)
    + name: box (required, string) - should be set to box for Ulabox requests
    + type: dry (required, string) - dry or cold, describes the type of product
    + quantity: 8 (required, number)
    + quantity_estimated: true (optional, boolean)
    + weight_kg: 4.5 (optional, number)

### Check if a Product is valid [POST /check/product]
+ Attributes (Product)
+ Response 204
            
+ Response 400 (application/json)
    Invalid Product / malformatted
    + Body
    
            {
                "status": "error",
                "error": "The product is missing weight information"
            }

## Shopper [/check/shopper]

+ Attributes (object)
    + shopper_number: KCWS5492344 (required, string) - shopper identifyer in client system
    + name: David (required, string) - name of the shopper
    + surname: Lopez (required, string) - surname of the shopper
    + email: david.lopez@gmail.com (required, string) - email of the shopper
    + phone: 665 005 493 (optional, string) - phone of the shopper

### Check if Shopper is valid [POST /check/shopper]
+ Attributes (Shopper)

+ Response 204
            
+ Response 400 (application/json)
    Invalid Shopper / malformatted
    + Body
    
            {
                "status": "error",
                "error": "The shopper misses name information"
            }

## TimeWindow [/time_windows] 

+ Attributes (object)
    + `start_time`: `2016-03-29T15:19:00+0100` (required, string) ISO8601 time at which the window starts
    + `end_time`: `2016-03-29T15:37:00+0100` (required, string) ISO8601 time at which the window ends

### Check if a Time Window is valid [POST /check/time_window]
+ Attributes (TimeWindow)

+ Response 204
            
+ Response 400 (application/json)
    Invalid Time Window
    + Body
    
            {
                "status": "error",
                "error": "start time is earlier than end time"
            }

## Warehouse [/warehouse]   

+ Attributes (object)
    + `id`: `8a538a71-db03-43ed-b641-32364ad57e74` (required, string) warehouse uuid
    + `area`: BARCELONA (optional, string)
    + location (required, Address)

### Check if a Warehouse is valid [POST /check/warehouse]
+ Attributes (Warehouse)
+ Response 204
            
+ Response 400 (application/json)
    Invalid Warehouse
    + Body
    
            {
                "status": "error",
                "error": "Unknown warehouse"
            }

## Step [/steps] 

+ Attributes (object)
    + `id` (required, number) 
    + `delivery_window` (required, TimeWindow) order delivery window
    + `order` (required, Order) order coverd by this step
    + `estimated_delivery_time` (optional, string)
    + `estimated_delivery_duration` (optional, string) time spent with the customer in seconds
    + `parking_cost` (number) number of estimated parking seconds
    + `distance_to_arrive` (number) driving distance in meters
    + `time_to_arrive` (number) driving time in seconds
    + `waiting_seconds` (number) number of seconds between parking time and selected delivery time

### Check if a Step is valid [POST /check/step]
+ Attributes (Step)
    
+ Response 204
            
+ Response 400 (application/json)
    Invalid Step
    + Body
    
            {
                "status": "error",
                "error": "unknown order reference"
            }

## Route [/routes]    

+ Attributes (object)
    + `id`: `af41c247-5a71-4d20-add2-78542d19af2d` (required, string) route UUID
    + `execution_window` (required, TimeWindow)
    + itinerary (required, array[Step])

### Check if a Route is valid [POST /check/route]
+ Attributes (Route)
+ Response 204
            
+ Response 400 (application/json)
    Invalid Route
    + Body
    
            {
                "status": "error",
                "error": "Unknown vehicle BCN_VAN_15"
            }

##Group Optimization

## Order [/orders]    

+ Attributes (object)
    + `id`: `43bcb4c5-47d5-4cff-9331-f48d381501bd` (required, string) Unique order identifier in UUID format
    + order_number: AA123456 (required, string) The order identifyer in eCommerce
    + products (required, array[Product])
    + destination (required, Address)
    + `delivery_window` (required, array[TimeWindow])
    + shopper (required, Shopper) - information about the shopper
    + priority (optional, number) - priority, on a scale from 1 (high) to 10 (low).
    

### Check if an Order is valid [POST /check/order]
+ Attributes (Order)
+ Response 204
            
+ Response 400 (application/json)
    Invalid Order
    + Body
    
            {
                "status": "error",
                "error": "The destination is compulsory"
            }
    
### Create an Order (Optimize Incrementally) [PUT /incremental-shifts/{shift_id}/orders/{order_id}]
+ Parameters
    + shift_id (required, string)
    + order_id (required, string)
    
+ Request (application/json)
+ Attributes 
    + products (required, array[Product])
    + destination (required, Address)
    + `delivery_window` (required, array[TimeWindow])
    + shopper (required, Shopper) - information about the shopper
    + priority (optional, number) - priority, on a scale from 1 (high) to 10 (low).
    
+ Response 201 (application/json)
    + Headers
    
            Location: /orders/{order_id}

+ Response 400
    Returned if there is any parameter missing or with wrong type or format
    + Body
+ Response 409
    Returned if there is already an order with the same order_number
    + Body
+ Response 500
    Returned if an error occurred storing the order
    + Body


### Block an Order [PATCH /incremental-shifts/{shift_id}/orders/{order_id}]
+ Parameters
    + shift_id (required, string)
    + order_id (required, string)

+ Request (application/json)
+ Attributes
    + action: block (required, string)
    
+ Response 202


## Shift [/shifts]

A Shift groups the orders of a specific warehouse, and has relationships with the resources that are assigned to fullfill these orders.

+ Attributes (object)
    + `id`: `d6b24e46-1ae0-4833-a22d-ad3e6399a8ad` (required, string) Unique shift identifier in UUID format
    + name: `2016-03-29 mañana` (optional, string) Custom name of this shift
    + `loading_window` (optional, TimeWindow)
    + span (optional, TimeWindow)
    + status: pending (required, string) shift status
    + main_scenario_status: optimizing (optional) 
    + warehouse (required, Warehouse) Warehouse covering this shift
    + orders (required, array[string]) list of order ids assigned to this shift
    
### Create a Shift (Start Incremental Optimization) [POST /incremental-shifts]

+ Request (application/json)

+ Attributes
    + `id`: `d6b24e46-1ae0-4833-a22d-ad3e6399a8ad` (required, string) Unique shift identifier
    + name: `2016-03-29 mañana` (optional, string) Custom name of this shift
    + `loading_window` (optional, TimeWindow) time window during which the trucks will be loading the orders
    + span (optional, TimeWindow) time window during which the trucks will be working
    + `warehouse_id`: `ee1a43c0-c872-4480-abc1-4115b8aeeb80` (required, string) id of the warehouse managing this shift
    + orders (optional, array[Order]) Orders for which we optimize deliveries
    
+ Response 201 (application/json)
    + Headers
    
            Location: /incremental-shifts/{shift_id}
        
        
### Close a Shift [PATCH /incremental-shifts/{shift_id}]

+ Parameters
    + shift_id (required, string)

+ Request (application/json)
+ Attributes
    + action: close (required, string)
        
+ Response 202
    
+ Response 404

### List Shift Routes [GET /incremental-shifts/{shift_id}/routes]

+ Parameters
    + shift_id (required, string)
    
+ Response 200 (application/json)
    + Attributes 
        + list (array[Route])
        
##Group Callbacks

## Scale Shifts [/scale-shifts]    

### Incremental Optimization Performed [PUT /shifts/{shift_id}]
+ Parameters
    + shift_id (required, string)

+ Request (application/json)
+ Attributes (object)
    + routes (array, required) 
        + route_id (required, string)
        + orders (required, array[string])

+ Response 202
    
+ Response 404

### Optimization closed [PATCH /shifts/{shift_id}]
+ Parameters
    + shift_id (required, string)
+ Request (application/json)
+ Attributes (object)
    + action: close (required, string)

+ Response 202
    
+ Response 404

## Scale Orders [/scale-orders]    

### Assign an Order to a Route [PATCH /shifts/{shift_id}/routes/{route_id}/orders/{order_id}]

+ Parameters
    + shift_id (required, string)

+ Request (application/json)
+ Attributes
    + action: assign (required, string)
        
+ Response 202
    
+ Response 404